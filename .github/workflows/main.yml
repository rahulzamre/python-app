name: Build and Push Docker Image

on:
  push:
    branches:
      - dev
      - preprod
      - main
      - production

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      # Base image name using GitHub's Container Registry (ghcr.io)
      IMAGE_NAME: ${{ github.repository }}
      DOCKER_BUILDKIT: 1  # Enable BuildKit for efficient builds

    steps:
    # Check out the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up Docker
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to GitHub Docker Registry
      uses: docker/login-action@v2
      with:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: https://ghcr.io/${{ github.actor }}

    - name: Set up Git
      run: |
        echo "Checking out the correct branch..."
        git fetch origin ${{ github.ref_name }}
        git checkout ${{ github.ref_name }}

    - name: Build Docker image for ${{ github.ref_name }} environment
      run: |
        echo "Building Docker image for ${{ github.ref_name }} environment..."

        # Sanitize branch name for Docker tag (replace / with -)
        BRANCH_NAME=${{ github.ref_name }}
        SANITIZED_BRANCH_NAME=$(echo "$BRANCH_NAME" | sed 's/\//-/g')  # Replace slashes with hyphens
        
        # Tagging strategy based on the branch (dev, preprod, prod, main)
        if [[ "$SANITIZED_BRANCH_NAME" == "dev" ]]; then
          IMAGE_TAG="dev"
          VERSION_TAG="dev-${{ github.sha }}"
        elif [[ "$SANITIZED_BRANCH_NAME" == "preprod" ]]; then
          IMAGE_TAG="preprod"
          VERSION_TAG="preprod-${{ github.sha }}"
        elif [[ "$SANITIZED_BRANCH_NAME" == "prod" ]]; then
          IMAGE_TAG="prod"
          VERSION_TAG="prod-${{ github.sha }}"
        elif [[ "$SANITIZED_BRANCH_NAME" == "main" ]]; then
          IMAGE_TAG="main"
          VERSION_TAG="main-${{ github.sha }}"
        else
          echo "Branch is not one of the predefined environments (dev, preprod, prod, main). Skipping build."
          exit 0
        fi

        # Build the Docker image with the appropriate tag
        echo "Building Docker image with tag $VERSION_TAG..."
        docker build -t "$IMAGE_NAME:$IMAGE_TAG" -t "$IMAGE_NAME:$VERSION_TAG" .

    - name: Push Docker image to GitHub Docker Registry
      run: |
        echo "Pushing Docker image to GitHub Container Registry..."
        docker push "$IMAGE_NAME:$IMAGE_TAG"
        docker push "$IMAGE_NAME:$VERSION_TAG"
