name: Create and publish a Docker image

on:
  push:
    branches: ['main', 'dev', 'preprod', 'production']
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  DOCKER_BUILDKIT: 1  # Enable BuildKit for efficient builds

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:

      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Log in to GitHub Container Registry
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker image
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        run: |
          # Get the short SHA (first 7 characters)
          SHORT_SHA=${{ github.sha }}
          SHORT_SHA=${SHORT_SHA:0:7}  # Extract the first 7 characters of the SHA

          # Get the branch name
          BRANCH_NAME=${{ github.ref_name }}
          
          if [[ "$BRANCH_NAME" == "dev" ]]; then
            IMAGE_TAG="dev"
          elif [[ "$BRANCH_NAME" == "preprod" ]]; then
            IMAGE_TAG="preprod"
          elif [[ "$BRANCH_NAME" == "production" ]]; then
            IMAGE_TAG="prod"
          elif [[ "$BRANCH_NAME" == "main" ]]; then
            IMAGE_TAG="main"
          else
            echo "Branch is not one of the predefined environments (dev, preprod, prod, main). Skipping build."
            exit 0
          fi          

          # Output the two tags: one based on branch name and one based on the short SHA
          echo "::set-output name=tags::${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${IMAGE_TAG}-${SHORT_SHA},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${SHORT_SHA}"

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Build and push Docker image for multiple architectures
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
